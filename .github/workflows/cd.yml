
name: CD - Deploy Terraform

on:
  workflow_call:
   inputs:
      branch:
        required: true
        type: string
  
permissions:
  id-token: write
  contents: read

env:
  TF_WORKING_DIR: ./deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}
    
      - name: Determine OIDC Role to Assume and Set ECS Variables
        id: set-role
        run: |
          BRANCH_NAME="${{ inputs.branch }}"
 
          if [[ "$BRANCH_NAME" == "develop" ]]; then
            ROLE_ARN="arn:aws:iam::242552818593:role/GitHubAction-AssumeRoleWithAction"
            TF_ENV_FILE="./dev/terraform.tfvars"
            TF_BACKEND_FILE="./dev/backend.tfvars"
          elif [[ "$BRANCH_NAME" == "release" ]]; then
            ROLE_ARN="arn:aws:iam::435976456890:role/GitHubAction-AssumeRoleWithAction"
            TF_ENV_FILE="./qa/terraform.tfvars"
            TF_BACKEND_FILE="./qa/backend.tfvars"
          else
            echo "Unsupported branch: $BRANCH_NAME"
            exit 1
          fi

          echo "Using role: $ROLE_ARN"
          echo "TF_ENV_FILE=$TF_ENV_FILE" >> $GITHUB_ENV
          echo "TF_BACKEND_FILE=$TF_BACKEND_FILE" >> $GITHUB_ENV
          echo "ROLE_ARN=$ROLE_ARN" >> $GITHUB_ENV

      - name: Set Repository Name from GitHub Events
        run: |  
          REPO_NAME=$(basename "${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]//g')
          echo "REPOSITORY_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "Using Repository Name: $REPO_NAME"

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Set up Git authentication
        env:
          GH_PAT: ${{ env.GH_PAT }}
        run: git config --global url."https://$GH_PAT@github.com/".insteadOf "https://github.com/"

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init -backend-config="./dev/backend.tfvars"

      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform plan \
            -var-file=${{ env.TF_ENV_FILE }} \
            -var="default_ecr_repository=${{ env.REPOSITORY_NAME }}" \
            -out=tfplan

      - name: Terraform Apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          terraform apply --auto-approve \
            -var-file=${{ env.TF_ENV_FILE }} \
            -var="default_ecr_repository=${{ env.REPOSITORY_NAME }}"
